
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
public class ProviderHomePage extends javax.swing.JFrame {

    /**
     * Creates new form ProviderHomePage
     */
    public ProviderHomePage(ServiceDatabase database, Connection connect) {
        this.database=database;
        this.connect=connect;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        myOfferingsPanel = new javax.swing.JPanel();
        pendingRequestPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pendingRequestTable = new javax.swing.JTable();
        completedRequestPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        providerHistoryTable = new javax.swing.JTable();
        logOutButton = new javax.swing.JButton();
        exitLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1020, 580));
        setResizable(false);

        myOfferingsPanel.setLayout(new java.awt.CardLayout());
        MyOfferings myOfferPanel = new MyOfferings(database,connect);
        myOfferingsPanel.add(myOfferPanel,"My Offerings");
        CardLayout cLayout=(CardLayout) myOfferingsPanel.getLayout();
        cLayout.show(myOfferingsPanel,"My Offerings");

        myOfferingsPanel=new MyOfferings(database,connect);

        jTabbedPane1.addTab("My Offerings", myOfferingsPanel);

        pendingRequestPanel.setBackground(new java.awt.Color(0,204,204));

        Object[][] data = database.getProviderPendingRequests();
        pendingRequestTable.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        pendingRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "ID", "Service Name", "Request Time", "Service Time", "Duration", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        for (int column = 0; column < pendingRequestTable.getColumnCount(); column++)
        {
            TableColumn tableColumn = pendingRequestTable.getColumnModel().getColumn(column);
            int preferredWidth = tableColumn.getMinWidth();
            int maxWidth = tableColumn.getMaxWidth();

            for (int row = 0; row < pendingRequestTable.getRowCount(); row++)
            {
                TableCellRenderer cellRenderer = pendingRequestTable.getCellRenderer(row, column);
                Component c = pendingRequestTable.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + pendingRequestTable.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);

                //  We've exceeded the maximum width, no need to check other rows

                if (preferredWidth >= maxWidth)
                {
                    preferredWidth = maxWidth;
                    break;
                }
            }

            tableColumn.setPreferredWidth( preferredWidth );
        }
        jScrollPane1.setViewportView(pendingRequestTable);

        javax.swing.GroupLayout pendingRequestPanelLayout = new javax.swing.GroupLayout(pendingRequestPanel);
        pendingRequestPanel.setLayout(pendingRequestPanelLayout);
        pendingRequestPanelLayout.setHorizontalGroup(
            pendingRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pendingRequestPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );
        pendingRequestPanelLayout.setVerticalGroup(
            pendingRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pendingRequestPanelLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pending Requests", pendingRequestPanel);

        completedRequestPanel.setBackground(new java.awt.Color(0,204,204));

        Object[][] historyData=database.getProviderCompletedRequests();
        providerHistoryTable.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        providerHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            historyData,
            new String [] {
                "ID", "Service Time", "Finish Time", "Feedback", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        for (int column = 0; column < providerHistoryTable.getColumnCount(); column++)
        {
            TableColumn tableColumn = providerHistoryTable.getColumnModel().getColumn(column);
            int preferredWidth = tableColumn.getMinWidth();
            int maxWidth = tableColumn.getMaxWidth();

            for (int row = 0; row < providerHistoryTable.getRowCount(); row++)
            {
                TableCellRenderer cellRenderer = providerHistoryTable.getCellRenderer(row, column);
                Component c = providerHistoryTable.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + providerHistoryTable.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);

                //  We've exceeded the maximum width, no need to check other rows

                if (preferredWidth >= maxWidth)
                {
                    preferredWidth = maxWidth;
                    break;
                }
            }

            tableColumn.setPreferredWidth( preferredWidth );
        }
        jScrollPane3.setViewportView(providerHistoryTable);

        javax.swing.GroupLayout completedRequestPanelLayout = new javax.swing.GroupLayout(completedRequestPanel);
        completedRequestPanel.setLayout(completedRequestPanelLayout);
        completedRequestPanelLayout.setHorizontalGroup(
            completedRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, completedRequestPanelLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
        completedRequestPanelLayout.setVerticalGroup(
            completedRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(completedRequestPanelLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Completed Requests", completedRequestPanel);

        logOutButton.setBackground(new java.awt.Color(32,33,55));
        logOutButton.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Log Out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        exitLabel.setText("x");
        exitLabel.setFont(new java.awt.Font("Segoe UI", 0, 36));
        exitLabel.setForeground(new java.awt.Color(255, 255, 255));
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logOutButton)
                .addGap(18, 18, 18)
                .addComponent(exitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(logOutButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        database.setCurrentUser(null);
        Login login = new Login();
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitLabelMouseClicked

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel completedRequestPanel;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel myOfferingsPanel;
    private javax.swing.JPanel pendingRequestPanel;
    private javax.swing.JTable pendingRequestTable;
    private javax.swing.JTable providerHistoryTable;
    // End of variables declaration//GEN-END:variables
    private ServiceDatabase database;
    private Connection connect;
}
