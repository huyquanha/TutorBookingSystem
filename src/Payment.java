
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Timestamp;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
public class Payment extends javax.swing.JPanel {

    /**
     * Creates new form Payment
     */
    public Payment(ServiceDatabase database, Connection connect,JPanel parent,ServiceRequest request, ServiceProvider provider) {
        this.database=database;
        this.connect=connect;
        this.parent=parent;
        this.request=request;
        this.provider=provider;
        service=database.getServiceOffering(request.getServiceID());
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        serviceNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        serviceTimeField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        serviceDurationField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        serviceAddressArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        costField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        totalCostField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        providerNameField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        phoneField = new javax.swing.JTextField();
        payButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0,204,204));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel1.setText("SERVICE REQUEST");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Service Name");

        serviceNameField.setEditable(false);
        serviceNameField.setText(service.getServiceName());

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("Service Time");

        serviceTimeField.setEditable(false);
        DateTimeFormatter formatter=DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
        serviceTimeField.setText(request.getServiceTime().format(formatter));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setText("Service Duration");

        serviceDurationField.setEditable(false);
        serviceDurationField.setText(request.getHour()+": "+request.getMinute());

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setText("Service Address");

        serviceAddressArea.setEditable(false);
        serviceAddressArea.setColumns(20);
        serviceAddressArea.setRows(5);
        jScrollPane1.setViewportView(serviceAddressArea);
        serviceAddressArea.setText(service.getLocation());

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setText("Cost per hour");

        costField.setEditable(false);
        costField.setText(Double.toString(service.getServiceCost()));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setText("Total Cost");

        totalCostField.setEditable(false);
        double totalCost=service.getServiceCost()*(request.getHour()+(double)request.getMinute()/60);
        totalCostField.setText(Double.toString(totalCost));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel8.setText("RECEIVER INFO");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setText("Provider Name");

        providerNameField.setEditable(false);
        providerNameField.setText(provider.getName());

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setText("Phone");

        phoneField.setEditable(false);
        phoneField.setText(provider.getPhoneNumber());

        payButton.setBackground(new java.awt.Color(32,33,55));
        payButton.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        payButton.setForeground(new java.awt.Color(255, 255, 255));
        payButton.setText("Pay");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(32,33,55));
        backButton.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel9))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(providerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(243, 243, 243)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(serviceDurationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(serviceNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(serviceTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(costField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalCostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(385, 385, 385)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(backButton)
                        .addGap(79, 79, 79)
                        .addComponent(payButton)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(serviceNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(serviceTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(serviceDurationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(costField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalCostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(providerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton)
                            .addComponent(payButton))
                        .addContainerGap(44, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        // TODO add your handling code here:
        int transactionID=database.getCurrentTransactionID()+1;
        Timestamp transactionTime=new Timestamp(System.currentTimeMillis());
        String payee=database.getCurrentUser().getUsername();
        System.out.println(payee);
        String payer=provider.getUsername();
        double payAmount=Double.parseDouble(totalCostField.getText());
        CreditCard card = database.getCreditCard(payee);
        //System.out.println(card.getCardNumber());
        if (card!=null) {
            int n= JOptionPane.showConfirmDialog(parent, "Confirm payment of "+payAmount+"?","",JOptionPane.YES_NO_OPTION,
                                                            JOptionPane.QUESTION_MESSAGE, null);
            if (n==JOptionPane.YES_OPTION) {
                if (card.decreaseAmount(payAmount)) {
                    Transaction transaction= new Transaction(transactionID, request.getID(), transactionTime,payee, payer,payAmount);

                    try {
                        statement=connect.prepareStatement("insert into servicerequest values (?,?,?,?,?,?,?,?)");
                        statement.setInt(1,request.getID());
                        statement.setInt(2,request.getServiceID());
                        statement.setString(3,request.getRequester());
                        statement.setTimestamp(4,Timestamp.valueOf(request.getRequestTime()));
                        statement.setTimestamp(5,Timestamp.valueOf(request.getServiceTime()));
                        statement.setInt(6,request.getHour());
                        statement.setInt(7,request.getMinute());
                        statement.setString(8,request.getAddress());
                        int result1=statement.executeUpdate();

                        statement=connect.prepareStatement("insert into transaction values (?,?,?,?,?,?)");
                        statement.setInt(1,transactionID);
                        statement.setInt(2,request.getID());
                        statement.setTimestamp(3,transactionTime);
                        statement.setString(4,payee);
                        statement.setString(5,payer);
                        statement.setDouble(6,payAmount);
                        int result2=statement.executeUpdate();

                        statement=connect.prepareStatement("update card set amount=amount-? where username=?");
                        statement.setDouble(1, payAmount);
                        statement.setString(2,request.getRequester());
                        int result3=statement.executeUpdate();
                        
                        statement=connect.prepareStatement("update provider set amount=amount+? where username=?");
                        statement.setDouble(1, payAmount);
                        statement.setString(2,provider.getUsername());
                        int result4=statement.executeUpdate();
                        if (result1!=1 || result2!=1 ||result3 !=1 || result4!=1) {
                            JOptionPane.showMessageDialog(parent, "Cannot finalize request");
                        }
                        else {
                            database.addRequest(request);
                            database.addTransaction(transaction);
                            JOptionPane.showMessageDialog(this,"Payment completed Successfully");
                            CardLayout cLayout=(CardLayout) parent.getLayout();
                            parent.removeAll();
                            parent.add(new SearchService(database,connect,parent),"Search Service");
                            cLayout.show(parent,"Search Service");
                            JTabbedPane homePane=(JTabbedPane) parent.getParent(); //get the tabbed pane in Homepage
                            /*MyRequest myRequestPanel=(MyRequest) homePane.getComponentAt(1);
                            JTable requestTable=myRequestPanel.getRequestTable();
                            DefaultTableModel model=(DefaultTableModel)requestTable.getModel();
                            Object[] requestData= {request.getID(),service.getServiceName(),request.getRequestTime(),request.getServiceTime(),request.getHour()+": "+request.getMinute(),request.getAddress()};
                            model.insertRow(model.getRowCount(),requestData);*/
                            MyRequest myRequestPanel=new MyRequest(database,connect);
                            homePane.setComponentAt(1,myRequestPanel);
                            
                        }
                    }
                    catch(Exception e) {
                        JOptionPane.showMessageDialog(this,"Cannot complete payment");
                        /*informLabel.setText(e.toString());
                        informLabel.setVisible(true);*/
                    }
                }
                else {
                    JOptionPane.showMessageDialog(parent, "Insufficient amount of money");
                }
            }
        }
        else {
            /*informLabel.setText("You do not have a card yet");
            informLabel.setVisible(true);*/
            JOptionPane.showMessageDialog(parent, "You do not have a card yet");
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        CardLayout cLayout=(CardLayout) parent.getLayout();
        parent.removeAll();
        parent.add(new CreateRequest(database,connect,parent,database.getServiceOffering(request.getServiceID())),"Create Request");
        cLayout.show(parent,"Create Request");
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField costField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton payButton;
    private javax.swing.JTextField phoneField;
    private javax.swing.JTextField providerNameField;
    private javax.swing.JTextArea serviceAddressArea;
    private javax.swing.JTextField serviceDurationField;
    private javax.swing.JTextField serviceNameField;
    private javax.swing.JTextField serviceTimeField;
    private javax.swing.JTextField totalCostField;
    // End of variables declaration//GEN-END:variables
    private ServiceDatabase database;
    private Connection connect;
    private JPanel parent;
    private ServiceRequest request;
    private ServiceProvider provider;
    private PreparedStatement statement;
    private ServiceOffering service;
}
