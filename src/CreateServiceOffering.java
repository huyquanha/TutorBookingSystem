
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
public class CreateServiceOffering extends javax.swing.JPanel {

    /**
     * Creates new form CreateServiceOffering
     */
    public CreateServiceOffering(ServiceDatabase database,Connection connect) {
        this.connect=connect;
        this.database=database;
        //this.parent=parent;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        costField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionArea = new javax.swing.JTextArea();
        createServiceButton = new javax.swing.JButton();
        informLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        locationArea = new javax.swing.JTextArea();
        nameLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        costLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setBackground(new java.awt.Color(0,204,204));
        setPreferredSize(new java.awt.Dimension(1009, 469));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Location");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("Cost(Per Hour) ");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setText("Short Description");

        descriptionArea.setColumns(20);
        descriptionArea.setRows(5);
        jScrollPane1.setViewportView(descriptionArea);

        createServiceButton.setBackground(new java.awt.Color(32,33,55));
        createServiceButton.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        createServiceButton.setForeground(new java.awt.Color(255, 255, 255));
        createServiceButton.setText("Create");
        createServiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createServiceButtonActionPerformed(evt);
            }
        });

        locationArea.setColumns(20);
        locationArea.setRows(5);
        jScrollPane2.setViewportView(locationArea);

        backButton.setBackground(new java.awt.Color(32,33,55));
        backButton.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(222, 222, 222)
                                .addComponent(backButton)
                                .addGap(69, 69, 69)
                                .addComponent(createServiceButton))
                            .addComponent(informLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(61, 61, 61))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(215, 215, 215)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(costLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(locationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(locationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(costLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(createServiceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createServiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createServiceButtonActionPerformed
        // NEED USER INPUT CHECKING
        int serviceID=database.getCurrentServiceID()+1;
        String serviceName=nameField.getText();
        String serviceLocation=locationArea.getText();
        String serviceDescription=descriptionArea.getText();
        if (serviceName.equals("")) {
            JOptionPane.showMessageDialog(this, "Service Name required");
            nameField.requestFocus();
        }
        else if (serviceLocation.equals("")) {
            JOptionPane.showMessageDialog(this, "Service Location required");
            locationArea.requestFocus();
        }
        else if (costField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Service Cost required");
            costField.requestFocus();
        }
        else {
            try {
                double serviceCost = Double.parseDouble(costField.getText());
                ServiceOffering newService = new ServiceOffering(serviceID,serviceName,serviceLocation,serviceDescription,serviceCost,database.getCurrentUser().getUsername());
                statement=connect.prepareStatement("insert into serviceOffering values (?,?,?,?,?,?,?,?)");
                statement.setInt(1,serviceID);
                statement.setString(2,serviceName);
                statement.setString(3,serviceLocation);
                statement.setString(4,serviceDescription);
                statement.setDouble(5,serviceCost);
                statement.setDouble(6,5.0);
                statement.setInt(7,1);
                statement.setString(8, database.getCurrentUser().getUsername());
                int result1=statement.executeUpdate();
                
                
                if (result1!=1) {
                    //informLabel.setText("Cannot create new service. Try again");
                    JOptionPane.showMessageDialog(this, "Cannot create new service");
                }
                else {
                    database.addServiceOffering(newService);
                    ServiceProvider provider = database.getProvider(database.getCurrentUser());
                    double newProviderRating=database.calculateProviderRating(provider);
                    statement=connect.prepareStatement("update provider set rating=? where username=?");
                    statement.setDouble(1,newProviderRating);
                    statement.setString(2,database.getCurrentUser().getUsername());
                    int result2=statement.executeUpdate();
                    if (result2!=1) {
                        JOptionPane.showMessageDialog(this, "Cannot update provider rating");
                    }
                    else {
                        provider.setProviderRating(newProviderRating);
                    }
                    //create a message dialog box to inform user the creation finished successfully
                    /*CardLayout cLayout=(CardLayout) parent.getLayout();
                    parent.removeAll();
                    parent.add(new MyOfferings(database,connect,parent),"My Offerings");
                    parent.add(new CreateServiceOffering(database,connect,parent),"Create Offering");
                    cLayout.show(parent,"My Offerings");*/
                    JTabbedPane homePane=(JTabbedPane) getParent();
                    homePane.setComponentAt(0,new MyOfferings(database,connect));
                }
            }
            catch(NumberFormatException e) {
                //informLabel.setText("Wrong format for cost");
                JOptionPane.showMessageDialog(this, "Wrong format for cost. Cannot create new service");
                costField.setText("");
                costField.requestFocus();
            }
            catch(Exception e) {
                //informLabel.setText("Cannto create a newservice. Try again");
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Cannot create new service");
            }
        }
    }//GEN-LAST:event_createServiceButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        /*CardLayout cLayout=(CardLayout) parent.getLayout();
        parent.removeAll();
        parent.add(new MyOfferings(database,connect,parent),"My Offerings");
        cLayout.show(parent,"My Offerings");*/
        JTabbedPane homePane=(JTabbedPane) getParent();
        homePane.setComponentAt(0,new MyOfferings(database,connect));
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField costField;
    private javax.swing.JLabel costLabel;
    private javax.swing.JButton createServiceButton;
    private javax.swing.JTextArea descriptionArea;
    private javax.swing.JLabel informLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea locationArea;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
    private ServiceDatabase database;
    private Connection connect;
    private PreparedStatement statement;
    private JPanel parent;
}
